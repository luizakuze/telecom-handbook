library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity counter_bcd is 
	generic (N: natural := 4);
	port (clk, rst: std_logic;
			d1, d10, d100: out std_logic_vector(N-1 downto 0));
end entity;

-- versao concorrente e sincrona
architecture sincrono_bcd of counter_bcd is
	signal d1_reg, d10_reg, d100_reg: unsigned (N-1 downto 0);
	signal d1_next, d10_next, d100_next: unsigned (N-1 downto 0);
begin
	process (clk, rst) is
	begin
		if (rst = '1') then
			d1_reg <= (others => '0');
			d10_reg <= (others => '0');
			d100_reg <= (others => '0');
		elsif (rising_edge(clk)) then
			d1_reg <= d1_next;
			d10_reg <= d10_next;
			d100_reg <= d100_next;
		end if;
	end process;
end architecture;